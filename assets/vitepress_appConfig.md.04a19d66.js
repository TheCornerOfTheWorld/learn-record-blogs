import{_ as e,o as a,c as i,a as t}from"./app.5bb8cff5.js";const k=JSON.parse('{"title":"应用配置","description":"","frontmatter":{},"headers":[{"level":2,"title":"appearance","slug":"appearance","link":"#appearance","children":[]},{"level":2,"title":"base","slug":"base","link":"#base","children":[]},{"level":2,"title":"description","slug":"description","link":"#description","children":[]},{"level":2,"title":"head","slug":"head","link":"#head","children":[]},{"level":2,"title":"ignoreDeadLinks","slug":"ignoredeadlinks","link":"#ignoredeadlinks","children":[]},{"level":2,"title":"lang","slug":"lang","link":"#lang","children":[]},{"level":2,"title":"lastUpdated","slug":"lastupdated","link":"#lastupdated","children":[]},{"level":2,"title":"markdown","slug":"markdown","link":"#markdown","children":[]},{"level":2,"title":"outDir","slug":"outdir","link":"#outdir","children":[]},{"level":2,"title":"cacheDir","slug":"cachedir","link":"#cachedir","children":[]},{"level":2,"title":"srcDir","slug":"srcdir","link":"#srcdir","children":[]},{"level":2,"title":"title","slug":"title","link":"#title","children":[]},{"level":2,"title":"title Template","slug":"title-template","link":"#title-template","children":[]},{"level":2,"title":"cleanUrls","slug":"cleanurls","link":"#cleanurls","children":[]},{"level":2,"title":"rewrites","slug":"rewrites","link":"#rewrites","children":[]},{"level":2,"title":"Build Hooks","slug":"build-hooks","link":"#build-hooks","children":[]}],"relativePath":"vitepress/appConfig.md"}'),r={name:"vitepress/appConfig.md"},l=t('<h1 id="app-configs" tabindex="-1">应用配置 <a class="header-anchor" href="#app-configs" aria-hidden="true">#</a></h1><p>可配置项有：</p><h2 id="appearance" tabindex="-1">appearance <a class="header-anchor" href="#appearance" aria-hidden="true">#</a></h2><p>它还注入了内联脚本，该脚本尝试通过 vitebress 主题外观键从本地存储读取用户设置，并恢复用户首选的颜色模式。</p><h2 id="base" tabindex="-1">base <a class="header-anchor" href="#base" aria-hidden="true">#</a></h2><p>网站将部署在的基本 URL。如果您计划在子路径（例如 GitHub 页面）下部署网站，则需要设置此 URL。如果您计划将站点部署到 <a href="http://foo.github.io/bar/%EF%BC%8C%E5%88%99%E5%BA%94%E5%B0%86%E5%9F%BA%E6%95%B0%E8%AE%BE%E2%80%A6" target="_blank" rel="noreferrer">foo.github.io/bar/，则应将基数设…</a> base，因此只需指定一次。</p><h2 id="description" tabindex="-1">description <a class="header-anchor" href="#description" aria-hidden="true">#</a></h2><p>站点说明。这将在页面 HTML 中呈现为＜ meta ＞标记。</p><h2 id="head" tabindex="-1">head <a class="header-anchor" href="#head" aria-hidden="true">#</a></h2><p>要在页面 HTML 的<code>&lt;head&gt;</code>标记中呈现的其他元素。用户添加的标记在结束头标记之前呈现，在 VitePress 标记之后呈现。</p><h2 id="ignoredeadlinks" tabindex="-1">ignoreDeadLinks <a class="header-anchor" href="#ignoredeadlinks" aria-hidden="true">#</a></h2><p>当设置为 true 时，VitePress 不会因死链接而导致构建失败。当设置为 localhostLinks 时，构建将在死链接上失败，但不会检查本地主机链接。</p><h2 id="lang" tabindex="-1">lang <a class="header-anchor" href="#lang" aria-hidden="true">#</a></h2><p>站点的 lang 属性。这将在页面 html 中呈现为<code>&lt;html lang=“en-US”&gt;</code>标记。</p><h2 id="lastupdated" tabindex="-1">lastUpdated <a class="header-anchor" href="#lastupdated" aria-hidden="true">#</a></h2><p>使用 gitcommit 获取时间戳。此选项启用默认主题以显示页面的上次更新时间。您可以通过 themeConfig.lastUpdatedText 自定义文本。</p><h2 id="markdown" tabindex="-1">markdown <a class="header-anchor" href="#markdown" aria-hidden="true">#</a></h2><p>配置 Markdown 解析器选项。VitePress 使用  Markdown-it 作为解析器，Shiki 突出显示语言语法。在该选项中，您可以传递各种与 Markdown 相关的选项以满足您的需求</p><h2 id="outdir" tabindex="-1">outDir <a class="header-anchor" href="#outdir" aria-hidden="true">#</a></h2><p>站点的构建输出位置，相对于项目根目录（如果您正在运行 vitepress build docs，则为 docs 文件夹）。</p><h2 id="cachedir" tabindex="-1">cacheDir <a class="header-anchor" href="#cachedir" aria-hidden="true">#</a></h2><p>缓存文件的目录，相对于项目根目录（如果您正在运行 vitebress build docs，则为 docs 文件夹）。cacheDir.</p><h2 id="srcdir" tabindex="-1">srcDir <a class="header-anchor" href="#srcdir" aria-hidden="true">#</a></h2><p>存储 markdown 页面的目录，相对于项目根目录。</p><h2 id="title" tabindex="-1">title <a class="header-anchor" href="#title" aria-hidden="true">#</a></h2><p>站点的标题。这将显示在导航栏中。也用作所有页面标题的后缀，除非定义了 titleTemplate。</p><h2 id="title-template" tabindex="-1">title Template <a class="header-anchor" href="#title-template" aria-hidden="true">#</a></h2><p>标题的后缀。例如，如果将 title 设置为 VitePress，并将 titleTemplate 设置为 My Site，则 html 标题将变为 VitePress| My Site。设置为 false 将禁用该功能。如果选项未定义，则将使用 title 选项的值。 要配置除|以外的标题分隔符，可以省略 title 并在 titleTemplate 中使用：title 符号。</p><h2 id="cleanurls" tabindex="-1">cleanUrls <a class="header-anchor" href="#cleanurls" aria-hidden="true">#</a></h2><p>允许从 URL 中删除尾随的.html。 Warning: 启用此功能可能需要在宿主平台上进行其他配置。要使其工作，服务器必须在请求/foo 时提供/foo.html，而无需重定向。</p><h2 id="rewrites" tabindex="-1">rewrites <a class="header-anchor" href="#rewrites" aria-hidden="true">#</a></h2><p>定义自定义目录&lt;-&gt;URL 映射。有关详细信息，请参阅路由：Routing: Customize the Mappings</p><h2 id="build-hooks" tabindex="-1">Build Hooks <a class="header-anchor" href="#build-hooks" aria-hidden="true">#</a></h2><p>VitePress 构建挂钩允许您向网站添加新功能和行为.</p>',34),d=[l];function n(h,s,c,o,p,u){return a(),i("div",null,d)}const b=e(r,[["render",n]]);export{k as __pageData,b as default};
